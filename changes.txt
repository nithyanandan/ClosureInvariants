From 2ec7d35 (pr1-review):
=========================

In examples/
(*) Add scalar_invariants_numpy.ipynb to repo 
(*) Add vector_invariants_numpy.ipynb to repo 

From 118914d (pr1-review):
=========================

(*) Rename scalar_invariants.ipynb to 
scalar_invariants_torch.ipynb
(*) Rename vector_invariants.ipynb to 
vector_invariants_torch.ipynb

From dd96719 (scalar):
=====================

In scalarInvariants.py,

(*) Add function closureAmplitudes_from_covariants() along with
docstring and examples to compute closure amplitudes from 
covariants 

In tests/test_scalarInvariants.py,

(*) Add test_point_closure_amplitudes_from_covariants() to test
the values of closure amplitudes for a point source and their
invariance to gain corruptions. 

In examples/scalar_invariants.ipynb,

(*) Give examples of calculating covariants, closure amplitudes 
from covariants, verification of their invariance against 
gain corruptions, and verification of values for a point source. 

From 00091b6 (scalar):
=====================

In scalarInvariants.py,

(*) Add function covariant() and covariants_multiple_loops()
along the same lines as advariant() and 
advariants_multiple_loops(), respectively, along with 
docstring and examples. 

In graphUtils.py,

(*) Update return type in generate_independent_quads() to be 
compatible with return type in generate_independent_triads().
Update docstring accordingly.

In test_graphUtils.py,

(*) Update test_generate_independent_triads() to be 
compatible with the change above.

From 3f686fd (scalar):
=====================

In graphUtils.py,

(*) rename function generate_triads() to 
generate_independent_triads() and update docstring accordingly 

In tests/test_scalarInvariants.py,

(*) Rename use of GU.generate_triads() to 
GU.generate_independent_triads()

In tests/test_vectorInvariants.py,

(*) Rename use of GU.generate_triads() to 
GU.generate_independent_triads()

In test/test_graphUtils.py,

(*) Replace all occurrences of GU.generate_triads() with 
GU.generate_independent_triads()

In examples/scalar_invariants.ipynb,

(*) Replace all occurrences of GU.generate_triads() with 
GU.generate_independent_triads()

In examples/vector_invariants.ipynb,

(*) Replace all occurrences of GU.generate_triads() with 
GU.generate_independent_triads()

From 8f4e551 (scalar):
=====================

In graphUtils.py,

(*) Add function generate_independent_quads() with docstring 
and type hinting to generate a list of independent quads 
(*) Rename function generate_triangles() to generate_triads()
(*) Update imports

In tests/test_scalarInvariants.py,

(*) Rename use of GU.generate_triangles() to GU.generate_triads()

In tests/test_vectorInvariants.py,

(*) Rename use of GU.generate_triangles() to GU.generate_triads()

In test/test_graphUtils.py,

(*) Add test_generate_independent_quads() by parametrizing 
node_labels
(*) Replace all occurrences of GU.generate_triangles() with 
GU.generate_triads()

In examples/scalar_invariants.ipynb,

(*) Add code to generate independent quads
(*) Replace all occurrences of GU.generate_triangles() with 
GU.generate_triads()

In examples/vector_invariants.ipynb,

(*) Replace all occurrences of GU.generate_triangles() with 
GU.generate_triads()

From 736d29c (scalar):
=====================

In scalarInvariants.py,

(*) Add function closureCphases_from_advariants() with type 
hinting and docstring to compute closure phases from advariants

In tests/scalarInvariants.py,

(*) Add test_point_closure_phases_from_advariants() to test the 
closure phases of point sources

In examples/scalar_invariants.ipynb, 

(*) Verify the closure phases of point sources 

From b0f1368 (test):
===================

In conftest.py,

(*) Add fixtures nelements, element_locs, element_pairs_locs, 
point_loc, and copol_point_xc for point source testing

In tests/test_scalrInvariants.py,

(*) Add test_point_scalar_invariance() to test scalar invariants
from a point source

From d33e7f2 (examples):
=======================

In examples/scalar_invariants.ipynb, 

(*) Verify point source invariants using "max" normalisation of
advariants

From fcfa8cc (scalar):
=====================

In scalarInvariants.py,

(*) Update function invariants_from_advariants_method1() to let 
the parameter normwts accept 'max' as input and assign weights 
accordingly

From 4924e0f (test):
===================

In scalarInvariants.py,

(*) Update normalisations of advariants in 
invariants_from_advariants_method1()

In tests/test_scalarInvariants.py,

(*) Update input parameters (normaxis) and normwts in test function
test_invariants_from_advariants_method1()

From deccb1c (examples):
=======================

In examples/scalar_invariants.ipynb, 

(*) Add test for point source invariance and to translation

From 1d8707a (examples):
=======================

(*) Add examples/scalar_invariants.ipynb to repo

From 413348c (test):
===================

In tests/test_scalarInvariants.py,

(*) Rename test_scalar_invariance() to test_scalar_invariance_old()
(*) Test the invariance and scale factor in the new 
test_scalar_invariance()

In tests/conftest.py,

(*) Add pytest fixtures npairs and ntriads_indep

From d8362f8 (test):
===================

In tests/test_scalarInvariants.py,

(*) Modify test_copol_advariants_multiple_loops() to 
test_copol_advariants_multiple_loops_old()
(*) Add test_copol_advariants_multiple_loops() based on changes in 
tests/conftest.py
(*) Minor changes

In tests/conftest.py,

(*) Add pytest fixtures copol_xc, copol_xc_lol, copol_advariant_loops,
copol_complex_gains
(*) minor updates 

In scalarInvariants.py,

(*) Move loop axis to the last axis in the value returned from function
advariants_multiple_loops() 

From 7bdff48 (test):
===================

In tests/test_vectorInvariants.py,

(*) Modify test_invariance() to test_invariance_old()
(*) Add test_invariance() to test invariance to complex polarimetric 
gains and the scale factors are the determinants of the gains 

In tests/conftest.py,

(*) Add pytest fixture nruns_shape
(*) minor updates 

From f9331a4 (test):
===================

In tests/test_vectorInvariants.py,

(*) Add test_vectors_from_advariants() to test creation of 4-vectors 
from advariants

In tests/conftest.py,

(*) Add pytest fixture pol_advariants_random 

From 701920e (test):
===================

In tests/test_vectorInvariants.py,

(*) Rename test_pol_advariants_multiple_loops() to 
test_pol_advariants_multiple_loops_old()
(*) Modify test_pol_advariants_multiple_loops() with a new test using
new pytest fixtures in tests/conftest.py

In tests/conftest.py,

(*) Add pytest fixtures element_pairs, example_ids_strings, pol_xc, 
pol_xc_lol, and pol_advariant_loops

In examples/vector_invariants.ipynb,

(*) Minor bug fix of variable name

From 459abce (test):
===================

In tests/conftest.py,

(*) Add one more id in fixtures example_ids and example_ids_strings

In tests/test_graphUtils.py,

(*) Update test_generate_triangles_valid_strings() and 
test_generate_triangles_valid()

From 36dc67c (examples):
=======================

In examples/vector_invariants.ipynb,

(*) Add verification of scale factors

From 464e51c (examples):
=======================

In examples/, 

(*) Add vector_invariants.ipynb to repo
(*) Add __init__.py to repo

From f111826 (scalar):
=====================

In tests/test_scalarInvariants.py,

(*) Add tests for function invariants_from_advariants_method1()
checking invariance

In tests/conftest.py,

(*) Add pytest fixture copol_complex_gains()

From 295912a (scalar):
=====================

In ClosureInvariants/scalarInvariants.py,

(*) Add function invariants_from_advariants_method1() with 
docstring and example

In tests/test_scalarInvariants.py,

(*) Add tests for function invariants_from_advariants_method1()
checking shape and type exceptions

From 7de39c9 (scalar):
=====================

In ClosureInvariants/scalarInvariants.py,

(*) Add function advariants_multiple_loops() with docstring 
and example

In tests/conftest.py,

(*) Add some fixtures for scalar advariant tests

In tests/test_scalarInvariants.py,

(*) Add tests for advariants on lists of correlations on loops

In tests/test_vectorInvariants.py,

(*) Minor updates

From 53b6e54 (scalar):
=====================

In ClosureInvariants/scalarInvariants.py,

(*) Add function advariant() along with docstring and example

In tests/conftest.py,

(*) Add some fixtures for scalar advariant tests

In tests/test_scalarInvariants.py,

(*) Add tests for advariants

From 5691a7a (scalar):
=====================

(*) Update tests/conftest.py for copolar case
(*) Add tests/test_scalarInvariants.py to repo

From 4426115 (scalar):
=====================

(*) Update tests/conftest.py for polarimetric case
(*) Update tests/test_vectorInvariants.py for polarimetric case

From 5b40c36 (scalar):
=====================

(*) Add ClosureInvariants/scalarInvariants.py to repo 

From d39e16b (main):
===================

In ClosureInvariants/vectorInvariants.py,

(*) Add function corrupt_visibilities() with docstring
(*) Update function header and docstring of advariant()

In ClosureInvariants/tests/conftest.py,

(*) Add pytest fixture for complex_gains

In ClosureInvariants/tests/test_vectorInvariants.py,

(*) Add test_invariance()

From 4ccc0db (main):
===================

In ClosureInvariants/vectorInvariants.py,

(*) Add function remove_scaling_factor_minkowski_dots() with docstring

In ClosureInvariants/tests/conftest.py,

(*) Add pytest fixture for minkowski_dots_scaling_factor_removed

In ClosureInvariants/tests/test_vectorInvariants.py,

(*) Add test_remove_scaling_factor_minkoski_dots()

From ddab370 (main):
===================

In ClosureInvariants/vectorInvariants.py,

(*) Add function complete_minkowski_dots() with docstring

In ClosureInvariants/tests/conftest.py,

(*) Add pytest fixture for complete_minkowski_dots

In ClosureInvariants/tests/test_vectorInvariants.py,

(*) Add test_complete_minkowski_dots()

From 5535f27 (main):
===================

In ClosureInvariants/tests/test_vectorInvariants.py,

(*) In test_minkowski_dot_products(), test expected shapes

From 70be752 (main):
===================

In ClosureInvariants/vectorInvariants.py,

(*) Add function minkowski_dot() with docstring

In ClosureInvariants/tests/conftest.py,

(*) Add pytest fixture for minkowski_dot_products

In ClosureInvariants/tests/test_vectorInvariants.py,

(*) Add test_minkowski_dot_products()

From bc4770f (main):
===================

(*) Add .gitignore to repository

From ac2f0c0 (main):
===================

(*) Move changes.txt to the parent folder
(*) Move LICENSE.md to the parent folder
(*) Move README.rst to the parent folder

From empty (main):
=================

(*) Initial commit of repository